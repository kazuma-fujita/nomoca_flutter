// Mocks generated by Mockito 5.0.15 from annotations
// in nomoca_flutter/test/data/api/create_user_api_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nomoca_flutter/data/api/api_client.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i2.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> get(String? endpoint, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(#get, [endpoint], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> post(String? endpoint,
          {Map<String, String>? headers, String? body}) =>
      (super.noSuchMethod(
          Invocation.method(
              #post, [endpoint], {#headers: headers, #body: body}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> put(String? endpoint,
          {Map<String, String>? headers, String? body}) =>
      (super.noSuchMethod(
          Invocation.method(#put, [endpoint], {#headers: headers, #body: body}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> delete(String? endpoint, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(#delete, [endpoint], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  String toString() => super.toString();
}
