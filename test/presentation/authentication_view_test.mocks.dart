// Mocks generated by Mockito 5.0.10 from annotations
// in nomoca_flutter/test/presentation/authentication_view_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nomoca_flutter/data/entity/database/user.dart' as _i7;
import 'package:nomoca_flutter/data/entity/remote/patient_card_entity.dart'
    as _i6;
import 'package:nomoca_flutter/data/repository/authentication_repository.dart'
    as _i2;
import 'package:nomoca_flutter/data/repository/patient_card_repository.dart'
    as _i5;
import 'package:nomoca_flutter/data/repository/send_short_message_repository.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i2.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> authentication(
          {String? mobilePhoneNumber,
          String? authCode,
          String? osVersion,
          String? deviceName}) =>
      (super.noSuchMethod(
          Invocation.method(#authentication, [], {
            #mobilePhoneNumber: mobilePhoneNumber,
            #authCode: authCode,
            #osVersion: osVersion,
            #deviceName: deviceName
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}

/// A class which mocks [SendShortMessageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendShortMessageRepository extends _i1.Mock
    implements _i4.SendShortMessageRepository {
  MockSendShortMessageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> sendShortMessage({String? mobilePhoneNumber}) =>
      (super.noSuchMethod(
          Invocation.method(
              #sendShortMessage, [], {#mobilePhoneNumber: mobilePhoneNumber}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}

/// A class which mocks [PatientCardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPatientCardRepository extends _i1.Mock
    implements _i5.PatientCardRepository {
  MockPatientCardRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.PatientCardEntity>> fetchList() =>
      (super.noSuchMethod(Invocation.method(#fetchList, []),
              returnValue: Future<List<_i6.PatientCardEntity>>.value(
                  <_i6.PatientCardEntity>[]))
          as _i3.Future<List<_i6.PatientCardEntity>>);
  @override
  String getAuthenticationToken(_i7.User? user) =>
      (super.noSuchMethod(Invocation.method(#getAuthenticationToken, [user]),
          returnValue: '') as String);
}
