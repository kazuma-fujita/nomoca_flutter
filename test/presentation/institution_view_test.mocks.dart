// Mocks generated by Mockito 5.0.10 from annotations
// in nomoca_flutter/test/presentation/institution_view_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nomoca_flutter/data/entity/database/user.dart' as _i5;
import 'package:nomoca_flutter/data/entity/remote/institution_entity.dart'
    as _i2;
import 'package:nomoca_flutter/data/repository/get_institution_repository.dart'
    as _i3;
import 'package:nomoca_flutter/data/repository/update_favorite_repository.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeInstitutionEntity extends _i1.Fake implements _i2.InstitutionEntity {
}

/// A class which mocks [GetInstitutionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInstitutionRepository extends _i1.Mock
    implements _i3.GetInstitutionRepository {
  MockGetInstitutionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.InstitutionEntity> getInstitution({int? institutionId}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getInstitution, [], {#institutionId: institutionId}),
              returnValue:
                  Future<_i2.InstitutionEntity>.value(_FakeInstitutionEntity()))
          as _i4.Future<_i2.InstitutionEntity>);
  @override
  String getAuthenticationToken(_i5.User? user) =>
      (super.noSuchMethod(Invocation.method(#getAuthenticationToken, [user]),
          returnValue: '') as String);
}

/// A class which mocks [UpdateFavoriteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateFavoriteRepository extends _i1.Mock
    implements _i6.UpdateFavoriteRepository {
  MockUpdateFavoriteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> updateFavorite({int? institutionId}) => (super.noSuchMethod(
      Invocation.method(#updateFavorite, [], {#institutionId: institutionId}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  String getAuthenticationToken(_i5.User? user) =>
      (super.noSuchMethod(Invocation.method(#getAuthenticationToken, [user]),
          returnValue: '') as String);
}
