// Mocks generated by Mockito 5.0.3 from annotations
// in nomoca_flutter/test/presentation/sign_up/sign_up_view_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nomoca_flutter/data/repository/authentication_repository.dart'
    as _i2;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i2.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> signIn(
          {String? mobilePhoneNumber,
          String? authCode,
          String? osVersion,
          String? deviceName}) =>
      (super.noSuchMethod(
          Invocation.method(#signIn, [], {
            #mobilePhoneNumber: mobilePhoneNumber,
            #authCode: authCode,
            #osVersion: osVersion,
            #deviceName: deviceName
          }),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> signUp(
          {String? mobilePhoneNumber,
          String? nickname,
          String? osVersion,
          String? deviceName}) =>
      (super.noSuchMethod(
          Invocation.method(#signUp, [], {
            #mobilePhoneNumber: mobilePhoneNumber,
            #nickname: nickname,
            #osVersion: osVersion,
            #deviceName: deviceName
          }),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> sendShortMessage({String? mobilePhoneNumber}) =>
      (super.noSuchMethod(
          Invocation.method(
              #sendShortMessage, [], {#mobilePhoneNumber: mobilePhoneNumber}),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}
